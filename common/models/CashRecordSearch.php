<?php

namespace common\models;

use common\helper\DateTimeHelper;
use common\models\CashRecord;
use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * CashRecordSearch represents the model behind the search form about `common\models\CashRecord`.
 */
class CashRecordSearch extends CashRecord
{
    public $cashIn;
    public $cashOut;
    public $status;
    public $date_added;
    public $date_modified;
    public $search_type = 0;

    public function attributeLabels()
    {
        return array_merge(parent::attributeLabels(),
            [
                'date_added'=>'开始时间',
                'date_modified'=>'结束时间',
            ]
        ); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id', 'user_id'], 'integer'],
            [['cash'], 'number'],
            [['note', 'date_added', 'date_modified', 'search_type'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = CashRecord::find();

        $query->joinWith('user');

        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => Yii::$app->params['gridPageSize'],
            ],
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        $timeStart = $this->date_added ? DateTimeHelper::getDateBegin($this->date_added) : 0;
        $timeEnd = $this->date_modified ? DateTimeHelper::getDateEnd($this->date_modified) : 0;

        $timeStart = DateTimeHelper::getFormatDateTime($timeStart);
        $timeEnd = DateTimeHelper::getFormatDateTime($timeEnd);

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
            'cash' => $this->cash,
            CashRecord::tableName().'.user_id' => Yii::$app->user->identity['user_id'],
            'pay_time' => $this->pay_time,
            'created_time' => $this->created_time,
        ]);

        $query->andFilterWhere(['like', 'note', $this->note]);

        if($this->search_type == 1) {
            $query->andFilterWhere(['>', 'cash', '0']);

        }
        elseif ($this->search_type == 2) {
            $query->andFilterWhere(['<', 'cash', '0']);
        }

        if($timeStart) {
            $query->andFilterWhere(['>=', 'created_time', $timeStart]);
        }

        if($timeEnd) {
            $query->andFilterWhere(['<=', 'created_time', $timeEnd]);
        }

//        if($this->search_type == 1) {
//            $query->andFilterWhere(['>', 'cash', '0']);
//            if($timeStart) {
//                $query->andFilterWhere(['>=', 'created_time', $timeStart]);
//            }
//
//            if($timeEnd) {
//                $query->andFilterWhere(['<=', 'created_time', $timeEnd]);
//            }
//        }
//        elseif ($this->search_type == 2) {
//            $query->andFilterWhere(['<', 'cash', '0']);
//            if($timeStart) {
//                $query->andFilterWhere(['>=', 'created_time', $timeStart]);
//            }
//
//            if($timeEnd) {
//                $query->andFilterWhere(['<=', 'created_time', $timeEnd]);
//            }
//        }
//        else {
//            if($timeStart && $timeEnd) {
//                $query->andFilterWhere(['or',
//                    ['and', ['>', 'cash', 0], ['and', ['>=', 'created_time', $this->date_added], ['<=', 'created_time', $this->date_modified]]],
//                    ['and', ['<', 'cash', 0], ['and', ['>=', 'created_time', $this->date_added], ['<=', 'created_time', $this->date_modified]]]
//                ]);
//            }
//            elseif($timeStart) {
//                $query->andFilterWhere(['or',
//                    ['and', ['>', 'cash', 0], ['>=', 'created_time', $this->date_added]],
//                    ['and', ['<', 'cash', 0], ['>=', 'created_time', $this->date_added]]
//                ]);
//            }
//            elseif($timeEnd) {
//                $query->andFilterWhere(['or',
//                    ['and', ['>', 'cash', 0], ['<=', 'created_time', $this->date_modified]],
//                    ['and', ['<', 'cash', 0], ['<=', 'created_time', $this->date_modified]]
//                ]);
//            }
//        }

        return $dataProvider;
    }
}
