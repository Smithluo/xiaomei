<?php

namespace backend\controllers;

use common\helper\DateTimeHelper;
use common\models\TouchAd;
use common\models\TouchAdPosition;
use common\models\TouchAdSearch;
use kartik\grid\EditableColumnAction;
use Yii;
use yii\filters\AccessControl;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * TouchAdController implements the CRUD actions for TouchAd model.
 */
class TouchAdController extends Controller
{
    /**
     * @return array
     */
    public function actions()
    {
        return ArrayHelper::merge(parent::actions(),
        [
            'editValue' => [
                'class' => EditableColumnAction::className(),
                'modelClass' => TouchAd::className(),
                'outputValue' => function($model, $attribute, $key, $index) {
                    return ''.TouchAd::$enableMap[$model->$attribute];
                },
                'outputMessage' => function($model, $attribute, $key, $index) {
                    return '';
                },
                'showModelErrors' => true,
                'errorOptions' => ['header' => '']
            ],
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {

        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['index', 'view', 'update', 'delete', 'create', 'upload',
                    'editValue',
                ],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all TouchAd models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new TouchAdSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single TouchAd model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new TouchAd model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new TouchAd();
        $model->scenario = 'insert';
        $touchAdPositions = TouchAdPosition::find()->asArray()->all();
        $touchAdPositions = array_column($touchAdPositions, 'position_name', 'position_id');

        $param = Yii::$app->request->post();
        if (Yii::$app->request->isPost) {
            $param['TouchAd']['end_time'] = DateTimeHelper::getFormatGMTTimesTimestamp($param['TouchAd']['end_time']);
            $param['TouchAd']['start_time'] = DateTimeHelper::getFormatGMTTimesTimestamp($param['TouchAd']['start_time']);
        }

        if ($model->load($param) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->ad_id]);
        } else {
            return $this->render('create', [
                'model' => $model,
                'touchAdPositions' => $touchAdPositions,
            ]);
        }
    }

    /**
     * Updates an existing TouchAd model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $model->scenario = 'update';
        $touchAdPositions = TouchAdPosition::find()->asArray()->all();
        $touchAdPositions = array_column($touchAdPositions, 'position_name', 'position_id');

        $param = Yii::$app->request->post();
        if (Yii::$app->request->isPost) {
            $param['TouchAd']['end_time'] = DateTimeHelper::getFormatGMTTimesTimestamp($param['TouchAd']['end_time']);
            $param['TouchAd']['start_time'] = DateTimeHelper::getFormatGMTTimesTimestamp($param['TouchAd']['start_time']);
        }

        if ($model->load($param) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->ad_id]);
        } else {
            return $this->render('update', [
                'model' => $model,
                'touchAdPositions' => $touchAdPositions,
            ]);
        }
    }

    /**
     * Deletes an existing TouchAd model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the TouchAd model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return TouchAd the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = TouchAd::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
