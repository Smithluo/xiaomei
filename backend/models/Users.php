<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/8/19 0019
 * Time: 16:33
 */

namespace backend\models;

use common\models\OrderInfo;
use yii\helpers\ArrayHelper;

class Users extends \common\models\Users
{
    public $totalAmount;
    public $regionList;
    public $tmpIntBalance;  //  实时计算可用余额
    public $payTimes;       //  实际支付次数
    public $lastPayTime;    //  最后支付时间
//    public function getDoneAmount() {
//        return $this->hasMany(OrderInfo::className(), ['user_id' => 'user_id'])->where(['order_status' => OrderInfo::ORDER_STATUS_REALLY_DONE])->sum('order_amount');
//    }

    public function attributeLabels()
    {
        return array_merge(parent::attributeLabels(), [
            'totalAmount' => '完成订单金额',
            'tmpIntBalance' => '可用积分余额',    //  只计算，不入库
            'payTimes' => '实际支付次数',    //  只计算，不入库
            'lastPayTime' => '最后支付时间',    //  只计算，不入库
        ]); // TODO: Change the autogenerated stub
    }

    public function getDoneOrders()
    {
        return $this->hasMany(OrderInfo::className(), ['user_id' => 'user_id'])->andOnCondition(['order_status' => OrderInfo::ORDER_STATUS_REALLY_DONE]);
    }

    /**
     * 没有供应商表
     * @return array|\common\models\Users[]
     */
    public static function getAllSuppliers()
    {
        $brandSupplierIds = array_column(
            Brand::find()->distinct()->select('supplier_user_id')
                ->where('supplier_user_id > 0')
                ->asArray()
                ->all(),
            'supplier_user_id'
        );
        $goodsSupplierIds = array_column(
            Goods::find()->distinct()->select('supplier_user_id')
                ->where('supplier_user_id > 0')
                ->asArray()
                ->all(),
            'supplier_user_id'
        );
        $supplierIds = array_unique(ArrayHelper::merge($brandSupplierIds, $goodsSupplierIds));
        $supplierList = Users::find()->where(['or', ['user_id' => $supplierIds], ['not', ['brand_admin_id' => 0]]])->all();
        return $supplierList;
    }

    /**
     * 没有供应商表
     * @return array|\common\models\Users[]
     */
    public static function getAllSuppliersArr()
    {
        $map = [];
        $supplierList = self::getAllSuppliers();
        foreach ($supplierList as $item) {
            $map[$item->user_id] = $item['user_name'] . '(' . $item['company_name'] . ')';
        }

        return $map;
    }

    public function getServicerUser()
    {
        return $this->hasOne(Users::className(), ['user_id' => 'servicer_user_id']);
    }

    /**
     * 获取所有的用户，可用于搜索筛选
     * @return array
     */
    public static function getAllUsers()
    {
        $usersMap = [];
        $users = self::find()->select([
            'user_id',
            'user_name',
            'nickname',
            'mobile_phone',
        ])->all();

        foreach ($users as $user) {
            $usersMap[$user['user_id']] = '('. $user['user_id']. ')'. $user->getShowName(). '('. $user['mobile_phone']. ')';
        }

        return $usersMap;
    }
}