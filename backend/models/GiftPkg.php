<?php
/**
 * Created by PhpStorm.
 * User: clark
 * Date: 2017/7/3
 * Time: 18:03
 */

namespace backend\models;

use \Yii;
use yii\helpers\ArrayHelper;
use yii\helpers\VarDumper;

class GiftPkg extends \common\models\GiftPkg
{
    public $giftGoodsList;  //  礼包活动的商品列表

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                ['giftGoodsList', 'required']
            ]
        ); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return ArrayHelper::merge(
            parent::attributeLabels(),
            [
                'giftGoodsList' => '礼包活动的商品列表'
            ]
        );

    }

    /**
     * backend/giftPkg model 添加了必填的礼包商品 字段, 任意地方直接修改giftPkg 之前都获取giftGoodsList值，避免 因非空校验不通过而保存失败
     */
    public function afterFind()
    {
        parent::afterFind();

        if (!empty($this->giftPkgGoods)) {
            $giftGoodsIdList = ArrayHelper::getColumn($this->giftPkgGoods, 'goods_id');
            $this->giftGoodsList = array_values($giftGoodsIdList);
        } else {
            $this->giftGoodsList = [];
        }
        // TODO: Change the autogenerated stub
    }

    /**
     * 获取 礼包活动的 id => name 数组
     * @return array
     */
    public static function idNameMap()
    {
        $map = self::find()->select(['id', 'name'])->orderBy(['id' => SORT_DESC])->indexBy('id')->all();

        return ArrayHelper::getColumn($map, 'name', true);
    }

    /**
     * 对象保存时 处理 礼包活动对应的商品
     */
    public function safeSave($giftGoodsList)
    {
        if ($this->save()) {
//`
            $oldGoodsList = GiftPkgGoods::find()
                ->where(['gift_pkg_id' => $this->id])
                ->indexBy('goods_id')
                ->all();
            if (!empty($giftGoodsList)) {
                $giftPkgGoods = new GiftPkgGoods();
                $giftPkgGoods->gift_pkg_id = $this->id;
                foreach ($giftGoodsList as $goodsId) {
                    //  添加新增的商品
                    if (empty($oldGoodsList[$goodsId])) {
                        $model = clone $giftPkgGoods;
                        $model->goods_id = $goodsId;
                        if (!$model->save()) {
                            Yii::warning(' 礼包商品 入库失败 $this = '.VarDumper::export($model), __METHOD__);
                        }
                    }
                }

                //  删除 取消的商品
                $diffGoodsList = array_diff(array_keys($oldGoodsList), $giftGoodsList);
                GiftPkgGoods::deleteAll([
                    'gift_pkg_id' => $this->id,
                    'goods_id' => $diffGoodsList,
                ]);
            }
        } else {
            Yii::warning(' 礼包活动 入库失败 $this = '.VarDumper::export($this), __METHOD__);
        }

    }
}