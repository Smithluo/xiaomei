<?php

namespace common\models;

use common\behaviors\VideoImageBehavior;
use common\helper\DateTimeHelper;
use FFMpeg\Coordinate\TimeCode;
use FFMpeg\FFMpeg;
use Yii;
use yii\helpers\FileHelper;

/**
 * This is the model class for table "o_touch_article".
 *
 * @property integer $article_id
 * @property integer $cat_id
 * @property string $title
 * @property string $pic
 * @property integer $brand_id
 * @property string $content
 * @property string $author
 * @property string $author_email
 * @property string $keywords
 * @property integer $is_open
 * @property integer $add_time
 * @property string $file_url
 * @property integer $open_type
 * @property string $link
 * @property string $description
 * @property string $tag
 * @property integer $type
 * @property integer $sort_order
 * @property string $resource_type
 * @property integer $click
 * @property integer $gallery_id
 * @property integer $resource_site_id
 */
class TouchArticle extends \yii\db\ActiveRecord
{
    const IS_OPEN = 1;
    const IS_NOT_OPEN = 0;

    const RESOURCE_TYPE_ARTICLE     = 'article';
    const RESOURCE_TYPE_GALLERY     = 'gallery';
    const RESOURCE_TYPE_VIDEO       = 'video';
    const RESOURCE_TYPE_DOWNLOAD    = 'download';

    public static $resourceTypeMap = [
        self::RESOURCE_TYPE_ARTICLE     => '文章',
        self::RESOURCE_TYPE_GALLERY     => '相册',
        self::RESOURCE_TYPE_VIDEO       => '视频',
        self::RESOURCE_TYPE_DOWNLOAD    => '下载',
    ];

    private $shouldChangePic = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'o_touch_article';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['cat_id', 'is_open', 'open_type', 'brand_id', 'type', 'sort_order', 'click', 'gallery_id', 'resource_site_id'], 'integer'],
            [['content'], 'string'],
            [['title'], 'string', 'max' => 150],
            [['author'], 'string', 'max' => 30],
            [['author_email'], 'string', 'max' => 60],
            [['description'], 'string', 'max' => 65535],
            [['keywords', 'file_url', 'link'], 'string', 'max' => 255],
            [['tag'], 'string', 'max' => 6],
            ['resource_type', 'string'],
            ['resource_type', 'default', 'value' => 'article'],

            ['pic', 'image', 'extensions' => 'jpg, jpeg, gif, png', 'on' => ['insert', 'update']],
//            [['add_time'], 'filter', 'filter' => function($value){
//                return DateTimeHelper::getFormatGMTTimesTimestamp(strtotime($value));
//            }],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'article_id' => '文章ID',
            'cat_id' => '文章分类',
            'title' => '标题',
            'content' => '内容',
            'author' => '作者',
            'author_email' => '作者Email',
            'keywords' => '关键词',
            'is_open' => '是否显示',
            'add_time' => '创建时间',
            'file_url' => '附件链接',
            'open_type' => '打开方式(1为打开外链，其它为打开编辑内容)',
            'link' => '外链',
            'description' => '描述',
            'tag' => '标签(显示在首页公告区文章的中括号内)',
            'pic' => '图片',
            'type' => '文章类型(1表示广告，只会在第二个位置显示一条)',
            'brand_id' => '关联品牌',
            'sort_order' => '排序值',
            'resource_type' => '资源类型',
            'click' => '点击量',
            'gallery_id' => '关联相册',
            'resource_site_id' => '来源站点',
        ];
    }

    /**
     * @inheritdoc
     * @return TouchArticleQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new TouchArticleQuery(get_called_class());
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->content = htmlspecialchars_decode(stripslashes($this->content));
        $this->description = htmlspecialchars_decode(stripslashes($this->description));
    }

    public function afterValidate()
    {
        parent::afterValidate(); // TODO: Change the autogenerated stub
        if ($this->open_type == 1 && empty($this->link)) {
            $this->addError('link', '内容为空的时候外链不能为空');
        }
        else if ($this->open_type != 1 && empty($this->content)) {
            $this->addError('content', '无外链的时候内容不能为空');
        }

        if (!empty($this->link) && !strstr($this->link, 'http://')) {
            $this->addError('link', '必须以http://开头');
        }
    }

    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            if ($this->sort_order == null) {
                $this->sort_order = 0;
            }
            if ($this->isAttributeChanged('content') && !empty($this->content)) {
                $this->content = addslashes(htmlspecialchars($this->content));
                $this->description = addslashes(htmlspecialchars($this->description));
            }

            if ($insert) {
                $this->click = rand(100, 300);
            }

            return true;
        } else {
            return false;
        }
    }

    public function getCategory() {
        return $this->hasOne(TouchArticleCat::className(), ['cat_id' => 'cat_id']);
    }

    public function getBrand() {
        return $this->hasOne(Brand::className(), ['brand_id' => 'brand_id']);
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \mongosoft\file\UploadImageBehavior::className(),
                'attribute' => 'pic',
                'scenarios' => ['insert', 'update'],
                'path' => '@imgRoot/touch_article_pic/{article_id}',
                'url' => Yii::$app->params['shop_config']['img_base_url'].'/touch_article_pic/{article_id}',
                'thumbs' => [],
            ],
            [
                'class' => VideoImageBehavior::className(),         //抽取10s时候的帧
            ],
        ];
    }

    /**
     * 关联来源站点
     * @return \yii\db\ActiveQuery
     */
    public function getResourceSite()
    {
        return $this->hasOne(ResourceSite::className(), ['id' => 'resource_site_id']);
    }

    /**
     * 关联相册
     * @return \yii\db\ActiveQuery
     */
    public function getGallery()
    {
        return $this->hasOne(Gallery::className(), ['gallery_id' => 'gallery_id']);
    }

    /**
     * 关联相册对应的图片
     * @return $this
     */
    public function getGallerImg()
    {
        return $this->hasMany(GalleryImg::className(), ['gallery_id' => 'gallery_id'])
            ->via('gallery');
    }

    public function getVideoUrl() {
        $preg='/<video .*?src="(.*?)".*?>/is';
        $content = htmlspecialchars_decode(stripslashes($this->content));
        $result = preg_match($preg, $content, $match);
        if ($result > 0) {
            return $match[1];
        }
        return false;
    }

    public function getVideoType() {
        $preg='/<source .*?type="(.*?)".*?>/is';
        $content = htmlspecialchars_decode(stripslashes($this->content));
        $result = preg_match($preg, $content, $match);
        if ($result > 0) {
            return $match[1];
        }
        return false;
    }

    public function getVideoPath() {
        $url = $this->getVideoUrl();
        if (!empty($url)) {
            $localPath = str_replace(Yii::$app->params['shop_config']['img_base_url'], '', $url);
            $absPath = Yii::getAlias('@imgRoot'). '/'. $localPath;
            return $absPath;
        }
        return false;
    }

    /**
     * 文章关联相册图片
     * @return \yii\db\ActiveQuery
     */
    public function getGalleryImg()
    {
        return $this->hasMany(GalleryImg::className(), ['gallery_id' => 'gallery_id']);
    }

    /**
     * 美妆知识库 通用的 获取数据的方法
     * @param $page
     * @param $pageSize 0表示一次获取所有内容
     * @param string $type
     * @param int $brandId
     * @param int $catId
     * @return array|TouchArticle[]
     */
    public static function getArticleByType($page, $pageSize = 0, $type = 'all', $brandId = 0, $catId = 24)
    {
        $articles = [];
        $taTb = self::tableName();

        if (!empty($pageSize)) {
            $offset = ($page - 1) * $pageSize;
        }

        if ($type == 'all') {
            $query = self::find()
                ->joinWith([
                    'resourceSite',
//                    'galleryImg' => function ($query) {
//                        return $query->orderBy(['sort_order' => SORT_DESC])->limit(3);
//                    },
                ])
                ->where([
                    $taTb.'.cat_id' => $catId,
                    $taTb.'.is_open' => self::IS_OPEN,
                ]);

            if (!empty($brandId)) {
                $query->andWhere([$taTb.'.brand_id' => $brandId]);
            }

            $query->orderBy([
                'add_time' => SORT_DESC,
                'sort_order' => SORT_DESC,
            ]);
            if (!empty($pageSize)) {
                $query->offset($offset)->limit($pageSize);
            }

            $articles = $query->all();
        }
        elseif (in_array($type, ['article', 'gallery', 'video', 'download'])) {
            $query = self::find()->joinWith('resourceSite');

            if ($type == 'gallery') {
                $query->joinWith([
                    'galleryImg' => function ($query) {
                        return $query->orderBy(['sort_order' => SORT_DESC])->limit(3);
                    },
                ]);
            }

            $query->where([
                $taTb.'.cat_id' => $catId,
                $taTb.'.is_open' => self::IS_OPEN,
                $taTb.'.resource_type' => $type
            ]);


            if (!empty($brandId)) {
                $query->andWhere([$taTb.'.brand_id' => $brandId]);
            }
            $query->distinct();

            $query->orderBy([
                'sort_order' => SORT_DESC,
                'add_time' => SORT_DESC,
            ]);
            if (!empty($pageSize)) {
                $query->offset($offset)->limit($pageSize);
            }

            $articles = $query->all();
        }

        return $articles;
    }

    /**
     * 格式化 美妆知识库的数据
     * @param $articles
     * @return array
     */
    public static function articleFormat($articles)
    {
        $articleList =[];
        if ($articles) {
            foreach ($articles as $article) {
                if ($article->open_type == 1) {
                    $url = $article->link;
                }
                else {
                    if ($article->resource_type == TouchArticle::RESOURCE_TYPE_VIDEO) {
                        $url = '/default/article/info_video/aid/'.$article->article_id.'.html';
                    }
                    else {
                        $url = '/default/article/info/aid/'.$article->article_id.'.html';
                    }
                }

                $item = [
                    'article_id' => (int)$article->article_id,
                    'resource_type' => (string)$article->resource_type,
                    'title' => (string)$article->title,
                    'click' => (int)$article->click,
                    'date' => DateTimeHelper::getFormatCNDate($article->add_time),
                    'url' => $url,
                    'shareUrl' => $article->open_type == 1
                        ? $article->link
                        : '/default/article/info_shared/aid/'. $article->article_id. '.html',
                    'site_name' => !empty($article->resourceSite->site_name) ? $article->resourceSite->site_name : '',
                    'site_logo' => !empty($article->resourceSite->site_logo)
                        ? $article->resourceSite->getUploadUrl('site_logo')
                        : '',
                ];

                //  图库 的图片为空的过滤掉
                if ($article->resource_type == 'gallery' && !empty($article->gallery_id)) {

                    $galleryImg = GalleryImg::find()
                        ->where(['gallery_id' => $article->gallery_id])
                        ->orderBy(['sort_order' => SORT_DESC])
                        ->limit(3)
                        ->all();
                    if (empty($galleryImg)) {
                        continue;
                    } else {
                        $item['gallery_id'] = (int)$article->gallery_id;
                        $item['url'] = $article->open_type == 1
                            ? $article->link
                            : '/default/gallery/detail/gallery_id/'.$item['gallery_id'].'.html';
//                        $item['gallery_name'] = $article->gallery->gallery_name;

                        //  相册要处理前三张图片, 不足三张的留空白
                        foreach ($galleryImg as $index => $img) {
                            if ($index == 0) {
                                $item['pic'] = $img->getUploadUrl('img_url');
                            }
                            $item['galleryImg'][]= $img->getUploadUrl('img_url');
                        }

                        if (count($item['galleryImg'] < 3)) {
                            $item['galleryImg'] = array_pad($item['galleryImg'], 3, '');
                        }
                    }

                } elseif ($article->resource_type == 'video') {

                    $item['pic'] = !empty($article->pic) ? $article->getUploadUrl('pic') : '';

                    //  从 富文本信息 中 正则匹配出第一个视频的地址
                    $videoPath = $article->getVideoUrl();
                    if (!empty($videoPath)) {
                        $item['video_path'] = $videoPath;
                    } else {
                        continue;
                    }

                } elseif ($article->resource_type == 'article') {
                    $item['pic'] = !empty($article->pic) ? $article->getUploadUrl('pic') : '';
                }

                $articleList[] = $item;
            }
        }

        return $articleList;
    }

    /**
     * 增加文章点击量
     */
    public function increaseClick()
    {
        $this->click += 1;

        if (!$this->save()) {
            Yii::error(' $articleId = '.$this->article_id.'的文章增加阅读量失败', __METHOD__);
        }
    }

    /**
     * 增加文章点击量
     */
    public static function increaseClickByGallery($galleryId)
    {
        return self::find()
            ->where([
                'gallery_id' => $galleryId,
                'is_open' => self::IS_OPEN,
            ])->all();
    }

    /**
     * 关联文章的分类
     * @return \yii\db\ActiveQuery
     */
    public function getTouchArticleCat()
    {
        return $this->hasOne(TouchArticleCat::className(), ['cat_id' => 'cat_id']);
    }
}
